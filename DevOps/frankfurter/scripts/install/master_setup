#!/bin/bash

# master_setup -- Configures a generic frankfuter robot
#
# Team-specific configuration (e.g. networking) is handled separately.
#
# This script assumes the Beaglebone initially runs vanilla Ubuntu and has an
# internet connection through its host (see 'usb_net_fwd').
#
# Should not be used in production (too slow). Images should instead be flashed
# via eMMC on SD cards.

wifi_driver_src="$HOME/wifi-driver-src"

function download_wifi_driver {
  git clone "https://github.com/xtknight/mt7610u-linksys-ae6000-wifi-fixes.git" "$wifi_driver_src"
}

function upgrade_kernel {
  sudo /opt/scripts/tools/update_kernel.sh
}

function install_wifi_driver {
  cd "$wifi_driver_src"
  make clean
  make
  sudo make install
  echo 'mt7610u_sta' | sudo tee --append /etc/modules
}

function install_apt_packages {
  sudo apt update -y
  sudo apt upgrade -y
  # FIXME: small issue with `/etc/issue` needing to be replaced
  sudo apt install -y sudo net-tools libpython3.7-dev usbutils man-db make build-essential gcc git vim tmux htop curl zip unzip linux-headers-$(uname -r)
  sudo apt install -y python3 python3-dev python3-pip  # Python dependencies
  sudo apt install -y devmem2
  sudo apt clean -y
  sudo apt autoremove -y
}

function disable_apache {
  sudo systemctl stop apache2
  sudo systemctl disable apache2
  sudo systemctl daemon-reload
}

function init_homedir {
  mkdir -p "$HOME/bin" "$HOME/updates" "$HOME/student-code"
  git init "$HOME/student-code"
  mv "$HOME/update.sh" "$HOME/bin" && chmod +x "$HOME/bin/update.sh"

  mv "$HOME/update.service" "$HOME/.config/systemd/user"
  systemctl --user daemon-reload && systemctl --user enable update.service
}

stage_flags="$HOME/install-flags"
mkdir -p "$stage_flags"

kernel_upgraded_flag="$stage_flags/kernel-upgraded"
wifi_driver_flag="$stage_flags/wifi-driver"
completed_flag="$stage_flags/completed"

sudo /sbin/route add default gw "192.168.7.1"
if [ ! -f "$kernel_upgraded_flag" ]; then
  upgrade_kernel
  touch "$kernel_upgraded_flag"
elif [ ! -f "$wifi_driver_flag" ]; then
  install_apt_packages
  download_wifi_driver
  install_wifi_driver
  touch "$wifi_driver_flag"
else
  # Set date and time to PST
  sudo timedatectl set-timezone America/Los_Angeles
  disable_apache

  # Install Python packages
  sudo pip3 install pipenv
  # FIXME: can fail sometimes with duplicate dependencies that conflict
  sudo pip3 install -r "$HOME/requirements.txt"

  sudo usermod -a -G dialout "$USER"
  sudo mv "$HOME/interfaces" "/etc/network/interfaces"
  init_homedir

  touch "$completed_flag"
fi

sudo reboot
