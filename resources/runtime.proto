/**
 *  runtime.proto -- Message types for communication between Runtime and Dawn.
 */

syntax = "proto3";

package runtime;

enum Mode {
    IDLE = 0;
    AUTO = 1;
    TELEOP = 2;
    ESTOP = 3;
}

enum TeamColor {
    NONE = 0;
    BLUE = 1;
    GOLD = 2;
}

enum StartingZone {
    UNKNOWN = 0;
    LEFT = 1;
    RIGHT = 2;
    PROD_SHELF = 3;
    VENDING = 4;
}

message Sensor {
    enum Type {
        LIMIT_SWITCH = 0;
        LINE_FOLLOWER = 1;
        POTENTIOMETER = 2;
        BATTERY = 3;
        SERVO = 4;
        MOTOR = 5;
        RFID = 6;
    }
    string uid = 1;
    Type type = 2;
    string name = 3;
}

message Handshake {
    uint64 heartbeat_window = 1;
    uint64 heartbeat_period = 2;
}

message Heartbeat {
    message Window {
        uint64 msg_sent = 1;
        uint64 msg_recv = 2;
    }
    uint64 timestamp = 1;
    repeated Window stats = 2;
}

message StudentCodeMetadata {
    string hash = 1;
    uint64 len = 2;
}

message EmptyResponse {
    /**
     *  For remote procedures that need some sort of acknowledgement
     */
}

service StateManager {
    rpc handshake (Handshake) returns ();
    rpc ping (Heartbeat) returns (Heartbeat);
    rpc confirm_student_code (string) returns (bool);
    rpc set_mode (Mode) returns (bool);
    rpc set_team (TeamColor) returns (bool);
    rpc set_starting_zone (StartingZone) returns (bool);
    rpc map_sensor_name (SensorMapping) returns (bool);
}

service Dawn {
    rpc sensor_connected (Sensor) returns (bool);
    rpc sensor_disconnected (Sensor) returns (bool);
    rpc write_console (stream string) returns (bool);
    rpc notify_error (string) returns (bool);
}

message SensorReading {
    message Parameter {
        string name = 1;
        oneof value {
            float float_value = 2;
            int32 int_value = 3;
            bool bool_value = 4;
        }
    }
    uint64 timestamp = 1;
    Sensor sensor = 2;
    repeated Parameter values = 3;
}

message Gamepad {
    uint32 index = 1;
    double left = 2;
    double right = 3;
    bool a_button = 4;
    bool b_button = 5;
    bool x_button = 6;
    bool y_button = 7;
    bool left_arrow = 8;
    bool right_arrow = 9;
    bool down_arrow = 10;
    bool up_arrow = 11;
    bool left_trigger = 12;
    bool left_bumper = 13;
    bool right_trigger = 14;
    bool right_bumper = 15;
}
